name: Backend Build & Deploy

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
      aws-assume-role-arn:
        type: string
        required: true
      aws-region:
        type: string
        required: true
      aws-statefile-s3-bucket:
        type: string
        required: true
      aws-lock-dynamodb-table:
        type: string
        required: true
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Install Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
       
      - name: Log in Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }} 

      - name: Build and Push Docker images
        run: |
          cd rest-api-ezops-test/
          docker build -t ${{ secrets.DOCKER_USERNAME }}/teste-ezops-cloud-backend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/teste-ezops-cloud-backend:lates    


  deploy-kubernetes:
    needs: [build-and-push]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Update Kubernetes Deployment
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST_KUBERNETES }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # Update packages and install essential dependencies
            sudo apt-get update && sudo apt-get install -y git apt-transport-https curl gnupg2

            # Configure kubectl (only if not installed)
            if ! command -v kubectl &> /dev/null; then
              echo "kubectl not found, installing..."
              curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
              chmod +x ./kubectl
              sudo mv ./kubectl /usr/local/bin/kubectl
            else
              echo "kubectl is already installed."
            fi

            # Clone or update the repository
            if [ -d "test-ezops-felipe" ]; then
              echo "Repository exists, pulling latest changes..."
              cd test-ezops-felipe
              git pull
            else
              echo "Cloning repository..."
              git clone https://github.com/Felipe0599/test-ezops-felipe.git
              cd test-ezops-felipe
            fi

            # Apply Kubernetes yaml
            kubectl apply -f Kubernetes/backend-deploy.yaml
            kubectl apply -f Kubernetes/backend-service.yaml
